name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop

  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    name: 🏗 Build Container
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout репозитория
        uses: actions/checkout@v4

      - name: 🐳 Сборка Docker-образа
        run: |
          docker build -t backend_app .

  docker-compose:
    name: 🚀 Run Docker Compose
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 📥 Checkout репозитория
        uses: actions/checkout@v4

      - name: 🐳 Установка Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: 🔥 Запуск `docker-compose`
        run: docker-compose up -d

      - name: ⏳ Ожидание запуска сервисов
        run: sleep 10

      - name: 🔍 Проверка API `/api/v1/ping`
        run: |
          for i in {1..5}; do
            if curl -sSf http://localhost:8080/api/v1/ping; then
              echo "✅ API доступен!"
              exit 0
            fi
            echo "⏳ Ожидание сервиса..."
            sleep 5
          done
          echo "❌ API не отвечает!"
          exit 1

  generate-swagger:
    name: 📜 Generate Swagger Docs
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 📥 Checkout репозитория
        uses: actions/checkout@v4

      - name: 🔧 Установка Swag
        run: go install github.com/swaggo/swag/cmd/swag@latest

      - name: 🚀 Генерация Swagger
        run: swag init -g cmd/backend/main.go -d .

      - name: 📤 Коммит обновленного Swagger
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          git add docs/
          git commit -m "🔄 Автообновление Swagger API" || echo "No changes to commit"
          git push origin main || echo "No changes to push"